// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getneighborhood_fast
arma::sp_umat getneighborhood_fast(const arma::mat x, double cutoff);
RcppExport SEXP _SpatialAnno_getneighborhood_fast(SEXP xSEXP, SEXP cutoffSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type cutoff(cutoffSEXP);
    rcpp_result_gen = Rcpp::wrap(getneighborhood_fast(x, cutoff));
    return rcpp_result_gen;
END_RCPP
}
// update_W_l
arma::mat update_W_l(const arma::mat& x_l, const arma::mat& y_l, const arma::mat& Ez_l, const arma::mat& Ci_l);
RcppExport SEXP _SpatialAnno_update_W_l(SEXP x_lSEXP, SEXP y_lSEXP, SEXP Ez_lSEXP, SEXP Ci_lSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_l(x_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type y_l(y_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ez_l(Ez_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ci_l(Ci_lSEXP);
    rcpp_result_gen = Rcpp::wrap(update_W_l(x_l, y_l, Ez_l, Ci_l));
    return rcpp_result_gen;
END_RCPP
}
// update_W_u
arma::mat update_W_u(const arma::mat& x_u, const arma::mat& R_u, const arma::cube& Ez_u, const arma::mat& C_ui, const arma::vec& N_u);
RcppExport SEXP _SpatialAnno_update_W_u(SEXP x_uSEXP, SEXP R_uSEXP, SEXP Ez_uSEXP, SEXP C_uiSEXP, SEXP N_uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_u(x_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R_u(R_uSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ez_u(Ez_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type N_u(N_uSEXP);
    rcpp_result_gen = Rcpp::wrap(update_W_u(x_u, R_u, Ez_u, C_ui, N_u));
    return rcpp_result_gen;
END_RCPP
}
// update_W0
arma::mat update_W0(const arma::mat& X, const arma::mat& R, const arma::cube& Ez, const arma::cube& Ci, const arma::vec& N);
RcppExport SEXP _SpatialAnno_update_W0(SEXP XSEXP, SEXP RSEXP, SEXP EzSEXP, SEXP CiSEXP, SEXP NSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ez(EzSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ci(CiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type N(NSEXP);
    rcpp_result_gen = Rcpp::wrap(update_W0(X, R, Ez, Ci, N));
    return rcpp_result_gen;
END_RCPP
}
// init_Sgm
arma::mat init_Sgm(const arma::mat& y_l, const arma::mat& Ez_l, const arma::mat& Ci_l, const arma::mat& Mu_l, const bool& diagSigma);
RcppExport SEXP _SpatialAnno_init_Sgm(SEXP y_lSEXP, SEXP Ez_lSEXP, SEXP Ci_lSEXP, SEXP Mu_lSEXP, SEXP diagSigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type y_l(y_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ez_l(Ez_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ci_l(Ci_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_l(Mu_lSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigma(diagSigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(init_Sgm(y_l, Ez_l, Ci_l, Mu_l, diagSigma));
    return rcpp_result_gen;
END_RCPP
}
// update_Sgm_u
arma::mat update_Sgm_u(const arma::mat& R_u, const arma::cube& Ez_u, const arma::mat& C_ui, const arma::mat& Mu_u, const arma::vec& N_u, const bool& diagSigma);
RcppExport SEXP _SpatialAnno_update_Sgm_u(SEXP R_uSEXP, SEXP Ez_uSEXP, SEXP C_uiSEXP, SEXP Mu_uSEXP, SEXP N_uSEXP, SEXP diagSigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type R_u(R_uSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ez_u(Ez_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type N_u(N_uSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigma(diagSigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Sgm_u(R_u, Ez_u, C_ui, Mu_u, N_u, diagSigma));
    return rcpp_result_gen;
END_RCPP
}
// update_Lam_l
arma::vec update_Lam_l(const arma::mat& x_l, const arma::mat& W_l, const arma::mat& Ez_l, const arma::mat& C_li, const bool& homo);
RcppExport SEXP _SpatialAnno_update_Lam_l(SEXP x_lSEXP, SEXP W_lSEXP, SEXP Ez_lSEXP, SEXP C_liSEXP, SEXP homoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type x_l(x_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_l(W_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Ez_l(Ez_lSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_li(C_liSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Lam_l(x_l, W_l, Ez_l, C_li, homo));
    return rcpp_result_gen;
END_RCPP
}
// update_Lam_u
arma::vec update_Lam_u(const arma::mat& R_u, const arma::mat& X_u, const arma::mat& W_u, const arma::cube& Ez_u, const arma::mat& C_ui, const bool& homo);
RcppExport SEXP _SpatialAnno_update_Lam_u(SEXP R_uSEXP, SEXP X_uSEXP, SEXP W_uSEXP, SEXP Ez_uSEXP, SEXP C_uiSEXP, SEXP homoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type R_u(R_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ez_u(Ez_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Lam_u(R_u, X_u, W_u, Ez_u, C_ui, homo));
    return rcpp_result_gen;
END_RCPP
}
// update_Lam
arma::vec update_Lam(const arma::mat& R, const arma::mat& X, const arma::mat& W, const arma::cube& Ez, const arma::cube& Ci, const bool& homo);
RcppExport SEXP _SpatialAnno_update_Lam(SEXP RSEXP, SEXP XSEXP, SEXP WSEXP, SEXP EzSEXP, SEXP CiSEXP, SEXP homoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ez(EzSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type Ci(CiSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Lam(R, X, W, Ez, Ci, homo));
    return rcpp_result_gen;
END_RCPP
}
// getPairDist
arma::mat getPairDist(const arma::mat x);
RcppExport SEXP _SpatialAnno_getPairDist(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(getPairDist(x));
    return rcpp_result_gen;
END_RCPP
}
// calYenergy2D_sp
arma::mat calYenergy2D_sp(const arma::ivec& y, const arma::sp_mat& Adj, int K, const arma::vec alpha, const double beta);
RcppExport SEXP _SpatialAnno_calYenergy2D_sp(SEXP ySEXP, SEXP AdjSEXP, SEXP KSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(calYenergy2D_sp(y, Adj, K, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// obj_beta
double obj_beta(const arma::ivec& y, const arma::mat& R, const arma::sp_mat& Adj, int K, const arma::vec alpha, const double beta);
RcppExport SEXP _SpatialAnno_obj_beta(SEXP ySEXP, SEXP RSEXP, SEXP AdjSEXP, SEXP KSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< const arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(obj_beta(y, R, Adj, K, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// update_sigma
arma::vec update_sigma(arma::mat X_m, arma::mat rho, arma::mat R, arma::vec alpha, arma::mat bet);
RcppExport SEXP _SpatialAnno_update_sigma(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP betSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type bet(betSEXP);
    rcpp_result_gen = Rcpp::wrap(update_sigma(X_m, rho, R, alpha, bet));
    return rcpp_result_gen;
END_RCPP
}
// update_Rsigma
arma::vec update_Rsigma(arma::mat X_m, arma::mat rho, arma::mat R, arma::vec alpha, arma::mat bet, arma::cube eta);
RcppExport SEXP _SpatialAnno_update_Rsigma(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP betSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Rsigma(X_m, rho, R, alpha, bet, eta));
    return rcpp_result_gen;
END_RCPP
}
// update_alpha
arma::vec update_alpha(arma::mat X_m, arma::mat rho, arma::mat R, arma::mat bet);
RcppExport SEXP _SpatialAnno_update_alpha(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP betSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type bet(betSEXP);
    rcpp_result_gen = Rcpp::wrap(update_alpha(X_m, rho, R, bet));
    return rcpp_result_gen;
END_RCPP
}
// update_Ralpha
arma::vec update_Ralpha(arma::mat X_m, arma::mat rho, arma::mat R, arma::mat bet, arma::cube eta);
RcppExport SEXP _SpatialAnno_update_Ralpha(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP betSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Ralpha(X_m, rho, R, bet, eta));
    return rcpp_result_gen;
END_RCPP
}
// update_beta_j
arma::rowvec update_beta_j(arma::mat X_m, arma::mat rho, arma::mat R, arma::vec alpha, arma::vec N, int j, double lfc);
RcppExport SEXP _SpatialAnno_update_beta_j(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP NSEXP, SEXP jSEXP, SEXP lfcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type N(NSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type lfc(lfcSEXP);
    rcpp_result_gen = Rcpp::wrap(update_beta_j(X_m, rho, R, alpha, N, j, lfc));
    return rcpp_result_gen;
END_RCPP
}
// update_Rbeta_j
arma::rowvec update_Rbeta_j(arma::mat X_m, arma::mat rho, arma::mat R, arma::vec alpha, arma::cube eta, int j, double lfc);
RcppExport SEXP _SpatialAnno_update_Rbeta_j(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP etaSEXP, SEXP jSEXP, SEXP lfcSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::cube >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< double >::type lfc(lfcSEXP);
    rcpp_result_gen = Rcpp::wrap(update_Rbeta_j(X_m, rho, R, alpha, eta, j, lfc));
    return rcpp_result_gen;
END_RCPP
}
// Mstep_marker
void Mstep_marker(const arma::mat& X_m, const arma::mat& rho, const arma::mat& R, arma::vec& alpha, arma::mat& bet, arma::vec& sigma, const arma::vec& N, const double& lfc);
RcppExport SEXP _SpatialAnno_Mstep_marker(SEXP X_mSEXP, SEXP rhoSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP betSEXP, SEXP sigmaSEXP, SEXP NSEXP, SEXP lfcSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type N(NSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Mstep_marker(X_m, rho, R, alpha, bet, sigma, N, lfc);
    return R_NilValue;
END_RCPP
}
// update_etajk
arma::vec update_etajk(arma::mat X_m, arma::vec alpha, arma::mat bet, int j, int k);
RcppExport SEXP _SpatialAnno_update_etajk(SEXP X_mSEXP, SEXP alphaSEXP, SEXP betSEXP, SEXP jSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type bet(betSEXP);
    Rcpp::traits::input_parameter< int >::type j(jSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(update_etajk(X_m, alpha, bet, j, k));
    return rcpp_result_gen;
END_RCPP
}
// add_mu
arma::cube add_mu(const arma::mat& rho, const arma::vec& alpha, const arma::mat& bet, const arma::cube& eta);
RcppExport SEXP _SpatialAnno_add_mu(SEXP rhoSEXP, SEXP alphaSEXP, SEXP betSEXP, SEXP etaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet(betSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type eta(etaSEXP);
    rcpp_result_gen = Rcpp::wrap(add_mu(rho, alpha, bet, eta));
    return rcpp_result_gen;
END_RCPP
}
// Mstep_Rmarker
void Mstep_Rmarker(const arma::mat& X_m, const arma::mat& rho, const double& lfc, const arma::mat& R, arma::vec& alpha, arma::mat& bet, arma::cube& eta, arma::cube& mu, arma::vec& sigma);
RcppExport SEXP _SpatialAnno_Mstep_Rmarker(SEXP X_mSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP RSEXP, SEXP alphaSEXP, SEXP betSEXP, SEXP etaSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R(RSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type bet(betSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::cube& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type sigma(sigmaSEXP);
    Mstep_Rmarker(X_m, rho, lfc, R, alpha, bet, eta, mu, sigma);
    return R_NilValue;
END_RCPP
}
// log_cp_marker
arma::vec log_cp_marker(arma::mat X_m, arma::vec mu_k_m, arma::vec sigma);
RcppExport SEXP _SpatialAnno_log_cp_marker(SEXP X_mSEXP, SEXP mu_k_mSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type mu_k_m(mu_k_mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(log_cp_marker(X_m, mu_k_m, sigma));
    return rcpp_result_gen;
END_RCPP
}
// log_cp_Rmarker
arma::vec log_cp_Rmarker(arma::mat X_m, arma::mat mu_k_m, arma::vec sigma);
RcppExport SEXP _SpatialAnno_log_cp_Rmarker(SEXP X_mSEXP, SEXP mu_k_mSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_k_m(mu_k_mSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(log_cp_Rmarker(X_m, mu_k_m, sigma));
    return rcpp_result_gen;
END_RCPP
}
// em_marker
Rcpp::List em_marker(const arma::mat& X_m, const arma::mat& rho, const double& lfc, const int& maxIter, const double& eps, const bool& verbose);
RcppExport SEXP _SpatialAnno_em_marker(SEXP X_mSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP maxIterSEXP, SEXP epsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(em_marker(X_m, rho, lfc, maxIter, eps, verbose));
    return rcpp_result_gen;
END_RCPP
}
// em_Rmarker
Rcpp::List em_Rmarker(const arma::mat& X_m, const arma::mat& rho, const double& lfc, const int& maxIter, const double& eps, const bool& verbose);
RcppExport SEXP _SpatialAnno_em_Rmarker(SEXP X_mSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP maxIterSEXP, SEXP epsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(em_Rmarker(X_m, rho, lfc, maxIter, eps, verbose));
    return rcpp_result_gen;
END_RCPP
}
// em
Rcpp:: List em(const arma::mat& X_m, const arma::mat& X_u, const arma::mat& rho, const double& lfc, const arma::mat& R_int, const arma::vec& Pi_int, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_em(SEXP X_mSEXP, SEXP X_uSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP R_intSEXP, SEXP Pi_intSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R_int(R_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi_int(Pi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(em(X_m, X_u, rho, lfc, R_int, Pi_int, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// emR
Rcpp:: List emR(const arma::mat& X_m, const arma::mat& X_u, const arma::mat& rho, const double& lfc, const arma::mat& R_int, const arma::vec& Pi_int, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_emR(SEXP X_mSEXP, SEXP X_uSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP R_intSEXP, SEXP Pi_intSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type R_int(R_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi_int(Pi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(emR(X_m, X_u, rho, lfc, R_int, Pi_int, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp
Rcpp::List runICM_sp(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem
Rcpp:: List icmem(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp_anno
Rcpp::List runICM_sp_anno(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp_anno(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp_anno(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem_anno
Rcpp:: List icmem_anno(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem_anno(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem_anno(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp_factor
Rcpp::List runICM_sp_factor(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp_factor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp_factor(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem_factor
Rcpp:: List icmem_factor(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem_factor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem_factor(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp_spatialfactor
Rcpp::List runICM_sp_spatialfactor(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp_spatialfactor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp_spatialfactor(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem_spatialfactor
Rcpp:: List icmem_spatialfactor(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem_spatialfactor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem_spatialfactor(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp_spatialanno
Rcpp::List runICM_sp_spatialanno(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp_spatialanno(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp_spatialanno(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem_spatialanno
Rcpp:: List icmem_spatialanno(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem_spatialanno(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem_spatialanno(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_sp_annofactor
Rcpp::List runICM_sp_annofactor(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::mat& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_sp_annofactor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_sp_annofactor(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmem_annofactor
Rcpp:: List icmem_annofactor(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmem_annofactor(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmem_annofactor(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// runICM_Rsp
Rcpp::List runICM_Rsp(const arma::mat& X_m, const arma::mat& X_u, arma::ivec& y, const arma::sp_mat& Adj, const arma::vec& Pi, const arma::cube& mu, const arma::vec& sigma, double logdSigma, const arma::mat& W_u, const arma::vec& Lam_u, const arma::mat& Mu_u, const arma::mat& Sgm_u, const arma::mat& Sgm_ui, const arma::mat& C_u, const arma::mat& C_ui, const arma::vec& beta_grid, double beta, int maxIter_ICM);
RcppExport SEXP _SpatialAnno_runICM_Rsp(SEXP X_mSEXP, SEXP X_uSEXP, SEXP ySEXP, SEXP AdjSEXP, SEXP PiSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP logdSigmaSEXP, SEXP W_uSEXP, SEXP Lam_uSEXP, SEXP Mu_uSEXP, SEXP Sgm_uSEXP, SEXP Sgm_uiSEXP, SEXP C_uSEXP, SEXP C_uiSEXP, SEXP beta_gridSEXP, SEXP betaSEXP, SEXP maxIter_ICMSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< arma::ivec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const arma::cube& >::type mu(muSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type logdSigma(logdSigmaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u(W_uSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u(Lam_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u(Mu_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u(Sgm_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_ui(Sgm_uiSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_u(C_uSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type C_ui(C_uiSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type beta_grid(beta_gridSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter_ICM(maxIter_ICMSEXP);
    rcpp_result_gen = Rcpp::wrap(runICM_Rsp(X_m, X_u, y, Adj, Pi, mu, sigma, logdSigma, W_u, Lam_u, Mu_u, Sgm_u, Sgm_ui, C_u, C_ui, beta_grid, beta, maxIter_ICM));
    return rcpp_result_gen;
END_RCPP
}
// icmemR
Rcpp:: List icmemR(const arma::mat& X_m, const arma::mat& X_u, const arma::sp_mat& Adj, const arma::mat& rho, const double& lfc, const arma::ivec& y_int, const arma::vec& Pi, const double& xi_int, const arma::vec& xi_grid, const arma::vec& alpha_int, const arma::mat& bet_int, const arma::mat& sigma_int, const arma::mat& Mu_u_int, const arma::mat& W_u_int, const arma::mat& Sgm_u_int, const arma::vec& Lam_u_int, const int& maxIter, const int& maxIter_ICM, const double& eps, const bool& verbose, const bool& homo, const bool& diagSigmak);
RcppExport SEXP _SpatialAnno_icmemR(SEXP X_mSEXP, SEXP X_uSEXP, SEXP AdjSEXP, SEXP rhoSEXP, SEXP lfcSEXP, SEXP y_intSEXP, SEXP PiSEXP, SEXP xi_intSEXP, SEXP xi_gridSEXP, SEXP alpha_intSEXP, SEXP bet_intSEXP, SEXP sigma_intSEXP, SEXP Mu_u_intSEXP, SEXP W_u_intSEXP, SEXP Sgm_u_intSEXP, SEXP Lam_u_intSEXP, SEXP maxIterSEXP, SEXP maxIter_ICMSEXP, SEXP epsSEXP, SEXP verboseSEXP, SEXP homoSEXP, SEXP diagSigmakSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X_m(X_mSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X_u(X_uSEXP);
    Rcpp::traits::input_parameter< const arma::sp_mat& >::type Adj(AdjSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< const double& >::type lfc(lfcSEXP);
    Rcpp::traits::input_parameter< const arma::ivec& >::type y_int(y_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Pi(PiSEXP);
    Rcpp::traits::input_parameter< const double& >::type xi_int(xi_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type xi_grid(xi_gridSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type alpha_int(alpha_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type bet_int(bet_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type sigma_int(sigma_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Mu_u_int(Mu_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type W_u_int(W_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Sgm_u_int(Sgm_u_intSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type Lam_u_int(Lam_u_intSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxIter_ICM(maxIter_ICMSEXP);
    Rcpp::traits::input_parameter< const double& >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< const bool& >::type homo(homoSEXP);
    Rcpp::traits::input_parameter< const bool& >::type diagSigmak(diagSigmakSEXP);
    rcpp_result_gen = Rcpp::wrap(icmemR(X_m, X_u, Adj, rho, lfc, y_int, Pi, xi_int, xi_grid, alpha_int, bet_int, sigma_int, Mu_u_int, W_u_int, Sgm_u_int, Lam_u_int, maxIter, maxIter_ICM, eps, verbose, homo, diagSigmak));
    return rcpp_result_gen;
END_RCPP
}
// calculateWeight
arma::vec calculateWeight(const arma::mat& X, const int& nPCs);
RcppExport SEXP _SpatialAnno_calculateWeight(SEXP XSEXP, SEXP nPCsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type nPCs(nPCsSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateWeight(X, nPCs));
    return rcpp_result_gen;
END_RCPP
}
// wpcaCpp
Rcpp::List wpcaCpp(const arma::mat& X, const int& nPCs, const bool& weighted);
RcppExport SEXP _SpatialAnno_wpcaCpp(SEXP XSEXP, SEXP nPCsSEXP, SEXP weightedSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const int& >::type nPCs(nPCsSEXP);
    Rcpp::traits::input_parameter< const bool& >::type weighted(weightedSEXP);
    rcpp_result_gen = Rcpp::wrap(wpcaCpp(X, nPCs, weighted));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpatialAnno_getneighborhood_fast", (DL_FUNC) &_SpatialAnno_getneighborhood_fast, 2},
    {"_SpatialAnno_update_W_l", (DL_FUNC) &_SpatialAnno_update_W_l, 4},
    {"_SpatialAnno_update_W_u", (DL_FUNC) &_SpatialAnno_update_W_u, 5},
    {"_SpatialAnno_update_W0", (DL_FUNC) &_SpatialAnno_update_W0, 5},
    {"_SpatialAnno_init_Sgm", (DL_FUNC) &_SpatialAnno_init_Sgm, 5},
    {"_SpatialAnno_update_Sgm_u", (DL_FUNC) &_SpatialAnno_update_Sgm_u, 6},
    {"_SpatialAnno_update_Lam_l", (DL_FUNC) &_SpatialAnno_update_Lam_l, 5},
    {"_SpatialAnno_update_Lam_u", (DL_FUNC) &_SpatialAnno_update_Lam_u, 6},
    {"_SpatialAnno_update_Lam", (DL_FUNC) &_SpatialAnno_update_Lam, 6},
    {"_SpatialAnno_getPairDist", (DL_FUNC) &_SpatialAnno_getPairDist, 1},
    {"_SpatialAnno_calYenergy2D_sp", (DL_FUNC) &_SpatialAnno_calYenergy2D_sp, 5},
    {"_SpatialAnno_obj_beta", (DL_FUNC) &_SpatialAnno_obj_beta, 6},
    {"_SpatialAnno_update_sigma", (DL_FUNC) &_SpatialAnno_update_sigma, 5},
    {"_SpatialAnno_update_Rsigma", (DL_FUNC) &_SpatialAnno_update_Rsigma, 6},
    {"_SpatialAnno_update_alpha", (DL_FUNC) &_SpatialAnno_update_alpha, 4},
    {"_SpatialAnno_update_Ralpha", (DL_FUNC) &_SpatialAnno_update_Ralpha, 5},
    {"_SpatialAnno_update_beta_j", (DL_FUNC) &_SpatialAnno_update_beta_j, 7},
    {"_SpatialAnno_update_Rbeta_j", (DL_FUNC) &_SpatialAnno_update_Rbeta_j, 7},
    {"_SpatialAnno_Mstep_marker", (DL_FUNC) &_SpatialAnno_Mstep_marker, 8},
    {"_SpatialAnno_update_etajk", (DL_FUNC) &_SpatialAnno_update_etajk, 5},
    {"_SpatialAnno_add_mu", (DL_FUNC) &_SpatialAnno_add_mu, 4},
    {"_SpatialAnno_Mstep_Rmarker", (DL_FUNC) &_SpatialAnno_Mstep_Rmarker, 9},
    {"_SpatialAnno_log_cp_marker", (DL_FUNC) &_SpatialAnno_log_cp_marker, 3},
    {"_SpatialAnno_log_cp_Rmarker", (DL_FUNC) &_SpatialAnno_log_cp_Rmarker, 3},
    {"_SpatialAnno_em_marker", (DL_FUNC) &_SpatialAnno_em_marker, 6},
    {"_SpatialAnno_em_Rmarker", (DL_FUNC) &_SpatialAnno_em_Rmarker, 6},
    {"_SpatialAnno_em", (DL_FUNC) &_SpatialAnno_em, 18},
    {"_SpatialAnno_emR", (DL_FUNC) &_SpatialAnno_emR, 18},
    {"_SpatialAnno_runICM_sp", (DL_FUNC) &_SpatialAnno_runICM_sp, 18},
    {"_SpatialAnno_icmem", (DL_FUNC) &_SpatialAnno_icmem, 22},
    {"_SpatialAnno_runICM_sp_anno", (DL_FUNC) &_SpatialAnno_runICM_sp_anno, 18},
    {"_SpatialAnno_icmem_anno", (DL_FUNC) &_SpatialAnno_icmem_anno, 22},
    {"_SpatialAnno_runICM_sp_factor", (DL_FUNC) &_SpatialAnno_runICM_sp_factor, 18},
    {"_SpatialAnno_icmem_factor", (DL_FUNC) &_SpatialAnno_icmem_factor, 22},
    {"_SpatialAnno_runICM_sp_spatialfactor", (DL_FUNC) &_SpatialAnno_runICM_sp_spatialfactor, 18},
    {"_SpatialAnno_icmem_spatialfactor", (DL_FUNC) &_SpatialAnno_icmem_spatialfactor, 22},
    {"_SpatialAnno_runICM_sp_spatialanno", (DL_FUNC) &_SpatialAnno_runICM_sp_spatialanno, 18},
    {"_SpatialAnno_icmem_spatialanno", (DL_FUNC) &_SpatialAnno_icmem_spatialanno, 22},
    {"_SpatialAnno_runICM_sp_annofactor", (DL_FUNC) &_SpatialAnno_runICM_sp_annofactor, 18},
    {"_SpatialAnno_icmem_annofactor", (DL_FUNC) &_SpatialAnno_icmem_annofactor, 22},
    {"_SpatialAnno_runICM_Rsp", (DL_FUNC) &_SpatialAnno_runICM_Rsp, 18},
    {"_SpatialAnno_icmemR", (DL_FUNC) &_SpatialAnno_icmemR, 22},
    {"_SpatialAnno_calculateWeight", (DL_FUNC) &_SpatialAnno_calculateWeight, 2},
    {"_SpatialAnno_wpcaCpp", (DL_FUNC) &_SpatialAnno_wpcaCpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpatialAnno(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
